//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Album = newAlbumTable("public", "album", "")

type albumTable struct {
	postgres.Table

	// Columns
	AlbumID  postgres.ColumnInteger
	Title    postgres.ColumnString
	ArtistID postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type AlbumTable struct {
	albumTable

	EXCLUDED albumTable
}

// AS creates new AlbumTable with assigned alias
func (a AlbumTable) AS(alias string) *AlbumTable {
	return newAlbumTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AlbumTable with assigned schema name
func (a AlbumTable) FromSchema(schemaName string) *AlbumTable {
	return newAlbumTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new AlbumTable with assigned table prefix
func (a AlbumTable) WithPrefix(prefix string) *AlbumTable {
	return newAlbumTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new AlbumTable with assigned table suffix
func (a AlbumTable) WithSuffix(suffix string) *AlbumTable {
	return newAlbumTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newAlbumTable(schemaName, tableName, alias string) *AlbumTable {
	return &AlbumTable{
		albumTable: newAlbumTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newAlbumTableImpl("", "excluded", ""),
	}
}

func newAlbumTableImpl(schemaName, tableName, alias string) albumTable {
	var (
		AlbumIDColumn  = postgres.IntegerColumn("album_id")
		TitleColumn    = postgres.StringColumn("title")
		ArtistIDColumn = postgres.IntegerColumn("artist_id")
		allColumns     = postgres.ColumnList{AlbumIDColumn, TitleColumn, ArtistIDColumn}
		mutableColumns = postgres.ColumnList{TitleColumn, ArtistIDColumn}
	)

	return albumTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		AlbumID:  AlbumIDColumn,
		Title:    TitleColumn,
		ArtistID: ArtistIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
