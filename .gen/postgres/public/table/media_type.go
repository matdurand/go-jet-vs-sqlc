//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var MediaType = newMediaTypeTable("public", "media_type", "")

type mediaTypeTable struct {
	postgres.Table

	// Columns
	MediaTypeID postgres.ColumnInteger
	Name        postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type MediaTypeTable struct {
	mediaTypeTable

	EXCLUDED mediaTypeTable
}

// AS creates new MediaTypeTable with assigned alias
func (a MediaTypeTable) AS(alias string) *MediaTypeTable {
	return newMediaTypeTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MediaTypeTable with assigned schema name
func (a MediaTypeTable) FromSchema(schemaName string) *MediaTypeTable {
	return newMediaTypeTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MediaTypeTable with assigned table prefix
func (a MediaTypeTable) WithPrefix(prefix string) *MediaTypeTable {
	return newMediaTypeTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MediaTypeTable with assigned table suffix
func (a MediaTypeTable) WithSuffix(suffix string) *MediaTypeTable {
	return newMediaTypeTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMediaTypeTable(schemaName, tableName, alias string) *MediaTypeTable {
	return &MediaTypeTable{
		mediaTypeTable: newMediaTypeTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newMediaTypeTableImpl("", "excluded", ""),
	}
}

func newMediaTypeTableImpl(schemaName, tableName, alias string) mediaTypeTable {
	var (
		MediaTypeIDColumn = postgres.IntegerColumn("media_type_id")
		NameColumn        = postgres.StringColumn("name")
		allColumns        = postgres.ColumnList{MediaTypeIDColumn, NameColumn}
		mutableColumns    = postgres.ColumnList{NameColumn}
	)

	return mediaTypeTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		MediaTypeID: MediaTypeIDColumn,
		Name:        NameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
